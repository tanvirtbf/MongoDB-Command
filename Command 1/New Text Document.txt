## Create Database and Create Collection

// Create Database :
-- use bank_db (bank_db nam e ekta database create hoyeche)

// Create Collection :
-- db.createCollection("employees") (bank_db database create korar por jokhon amra ai database er moddhe thakbo tokhon ai command dile employees nam e collection create hoye jabe)

// Show Collections :
-- show collections

// Show Database Collection :
-- show dbs

## Delete Database and Delete Collection 

// Delete Database
--db.dropDatabase()

// Delete Collection 
-- db.collection_name.drop() 


## CRUD (Create, Read, Update, Delete)

1. Create --- insertOne() , insertMany()
2. Read --- find() , findOne()
3. Update --- updateOne() , updateMany()
4. Delete --- deleteOne() , deleteMany()


1. Create 

// insertOne()
// Syntex : db.collection_name.insertOne({data...})

// example : 

db.cars.insertOne({
 "maker": "Tata",
 "model": "Nexon",
 "fuel_type": "Petrol",
 "transmission": "Automatic",
 "engine": {
 "type": "Turbocharged",
 "cc": 1199,
 "torque": "170 Nm"
 },
 "features": [
 "Touchscreen",
 "Reverse Camera",
 "Bluetooth Connectivity"
 ],
 "sunroof": false,
 "airbags": 2
 }) 




// insertMany()
Syntex : db.collection_name.insertMany([{1st document},{2nd document},{3rd document}])

// example : 
db.cars.insertMany(
[
 {
 "maker": "Hyundai",
 "model": "Creta",
 "fuel_type": "Diesel",
 "transmission": "Manual",
 "engine": {
 "type": "Naturally Aspirated",
 "cc": 1493,
 "torque": "250 Nm"
 },
 "features": [
 "Sunroof",
 "Leather Seats",
 "Wireless Charging",
"Ventilated Seats",
"Bluetooth"
 ],
 "sunroof": true,
 "airbags": 6
 },
 {
 "maker": "Maruti Suzuki",
 "model": "Baleno",
 "fuel_type": "Petrol",
 "transmission": "Automatic",
 "engine": {
 "type": "Naturally Aspirated",
 "cc": 1197,
 "torque": "113 Nm"
 },
 "features": [
 "Projector Headlamps",
 "Apple CarPlay",
 "ABS"
 ],
 "sunroof": false,
 "airbags": 2
 },
 {
 "maker": "Mahindra",
 "model": "XUV500",
 "fuel_type": "Diesel",
 "transmission": "Manual",
 "engine": {
 "type": "Turbocharged",
 "cc": 2179,
 "torque": "360 Nm"
 },
 "features": [
 "All-Wheel Drive",
 "Navigation System",
 "Cruise Control"
 ],
 "sunroof": true,
 "airbags": 6
 },
 {
 "maker": "Honda",
 "model": "City",
 "fuel_type": "Petrol",
 "transmission": "Automatic",
 "engine": {
 "type": "Naturally Aspirated",
 "cc": 1498,
 "torque": "145 Nm"
 },
 "features": [
 "Keyless Entry",
 "Auto AC",
 "Multi-angle Rearview Camera"
 ],
 "sunroof": false,
 "airbags": 4
 }
]
)



2. Read 

// find() 
// Syntex : db.collection_name.find() -- all document show hobe 

// jodi chai cars collection er prottekta documents theke specific kono key er data chai tahole...

// Syntext : db.cars.find({}, {model:1}) -- tahole cars collection er moddhe joto document ase sob gular theke model nam e key print hobe with unique id 
// kintu jodi id na chai tahole...
// Syntext : db.cars.find({}, {model:1, _id:0})
// ekhane upore black {} deyar karon amk bolte hocche match all the document. mane sob document match kore result ano

// example : jodi chai sob document er moddhe jar jar fuel_type Petrol hobe sei document gula return koro tahole..
db.cars.find({fuel_Type:"Petrol"})

// example : jodi chai sob document er moddhe jar jar features array er moddhe Sunroof name thakbe segula return koro..
db.cars.find({"features":'Sunroof'})

// example : jodi chai sob document er moddhe jar jar engine object er moddhe type key er value "Naturally Aspirated" tader return koro..
db.cars.find("engine.type":"Naturally Aspirated")


// findOne()
// Syntex : db.collection_name.findOne() -- oi collection er sob document er moddhe first document ta return hobe














